- You can find open redirects by using a few recon tricks to discover vulnerable endpoints and confirm the open redirect manually

- Step 1: Look for Redirect Parameters : 
	- Start by searching for the parameters used for redirects. These often show up as URL parameters like the ones in bold here:
	https://example.com/login?redirect=https://example.com/dashboard
	https://example.com/login?redir=https://example.com/dashboard
	https://example.com/login?next=https://example.com/dashboard
	https://example.com/login?next=/dashboard

	- Open your proxy while you browse the website. Then, in your HTTP history, look for any parameter that contains absolute or relative URLs. An absolute URL is complete and contains all the components necessary to locate the 	resource it points to, like https://example.com/login. 

	- Absolute URLs contain at least the URL scheme, hostname, and path of a resource. A relative URL must be concatenated with another URL by the server in order to be used.

	- These typically contain only the path component of a URL, like /login. Some redirect URLs will even omit the first slash (/) character of the relative URL, as in https://example.com/login?next=dashboard.

	- Note that not all redirect parameters have straightforward names like redirect or redir. For example, I’ve seen redirect parameters named RelayState, next, u, n, and forward. You should record all parameters that seem to be used 
	for redirect, regardless of their parameter names.

	- In addition, take note of the pages that don’t contain redirect parameters in their URLs but still automatically redirect their users. These pages are candidates for referer-based open redirects. To find these pages, you can 
	keep an eye out for 3XX response codes like 301 and 302. These response codes indicate a redirect. 

- Step 2: Use Google Dorks to Find Additional Redirect Parameter :
	- Google dork techniques are an efficient way to find redirect parameters. To look for redirect parameters on a target site by using Google dorks, start by setting the site search term to your target site: site:example.com
	- Then look for pages that contain URLs in their URL parameters, making use of %3D, the URL-encoded version of the equal sign (=). By adding %3D in your search term, you can search for terms like =http and =https, which are 	indicators of URLs in a parameter. The following searches for URL parameters that contain absolute URLs: inurl:%3Dhttp site:example.com
	- Also try using %2F, the URL-encoded version of the slash (/). The following search term searches URLs that contain =/, and therefore returns URL parameters that contain relative URLs: inurl:%3D%2F site:example.com
	- Alternatively, you can search for the names of common URL redirect parameters. Here are a few search terms that will likely reveal parameters used for a redirect:
	inurl:redir site:example.com
	inurl:redirect site:example.com
	inurl:redirecturi site:example.com
	inurl:redirect_uri site:example.com
	inurl:redirecturl site:example.com
	inurl:redirect_uri site:example.com
	inurl:return site:example.com
	inurl:returnurl site:example.com
	inurl:relaystate site:example.com
	inurl:forward site:example.com
	inurl:forwardurl site:example.com
	inurl:forward_url site:example.com
	inurl:url site:example.com
	inurl:uri site:example.com
	inurl:dest site:example.com
	inurl:destination site:example.com
	inurl:next site:example.com
	- These search terms will find URLs such as the following:
	https://example.com/logout?dest=/
	https://example.com/login?RelayState=https://example.com/home
	https://example.com/logout?forward=home
	https://example.com/login?return=home/settings

- Step 3: Test for Parameter-Based Open Redirects :
	- Pay attention to the functionality of each redirect parameter you’ve found and test each one for an open redirect. Insert a random hostname, or a hostname you own, into the redirect parameters; then see if the site 	automatically redirects to the site you specified:
	https://example.com/login?n=http://google.com
	https://example.com/login?n=http://attacker.com
	- Some sites will redirect to the destination site immediately after you visit the URL, without any user interaction. But for a lot of pages, the redirect won’t happen until after a user action, like registration, login, or  	logout. In those cases, be sure to carry out the required user interactions before checking for the redirect

- Step 4: Test for Referer-Based Open Redirects :
	- Test for referer-based open redirects on any pages you found in step 1 that redirected users despite not containing a redirect URL parameter. To test for these, set up a page on a domain you own and host this HTML page:
	<html>
 	<a href="https://example.com/login">Click on this link!</a>
	</html>




